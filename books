#include <iostream>
#include <vector>
#include <string>
 
class Book {
public:
    Book(const std::string &title, const std::string &author)
        : title(title), author(author) {}

    std::string getTitle() const { return title; }
    std::string getAuthor() const { return author; }

private:
    std::string title;
    std::string author;
};

class Library {
public:
    void addBook(const Book &book) {
        books.push_back(book);
    }

    bool deleteBook(const std::string &title) {
        for (size_t i = 0; i < books.size(); ++i) {
            if (books[i].getTitle() == title) {
                books.erase(books.begin() + i);
                return true;
            }
        }
        return false;
    }

    void displayAllBooks() const {
        for (const auto &book : books) {
            std::cout << "Title: " << book.getTitle() << ", Author: " << book.getAuthor() << std::endl;
        }
    }

    bool findBookByTitle(const std::string &title) const {
        for (const auto &book : books) {
            if (book.getTitle() == title) {
                std::cout << "Found: " << book.getTitle() << ", Author: " << book.getAuthor() << std::endl;
                return true;
            }
        }
        return false;
    }

private:
    std::vector<Book> books;
};

void testLibrary() {
    Library library;

    // Test Case 1: Adding books
    std::cout << "Test Case 1: Adding books\n";
    library.addBook(Book("The Great Gatsby", "F. Scott Fitzgerald"));
    library.addBook(Book("1984", "George Orwell"));
    library.addBook(Book("To Kill a Mockingbird", "Harper Lee"));
    library.displayAllBooks();
    std::cout << "-----------------------\n";

    // Test Case 2: Finding a book by title
    std::cout << "Test Case 2: Finding a book by title\n";
    library.findBookByTitle("1984");
    library.findBookByTitle("Moby Dick");
    std::cout << "-----------------------\n";

    // Test Case 3: Deleting a book
    std::cout << "Test Case 3: Deleting a book\n";
    library.deleteBook("1984");
    library.displayAllBooks();
    std::cout << "-----------------------\n";
}

int main() {
    testLibrary(); // Call the test function
    return 0;
}
