#include<iostream>
#include<string>
#include<vector>
#include <iomanip>
template <typename T> class Item{
    public:
        T name;
        T expiration;
        T category;
        int quantity;
        Item(T n, T e, T c, int q){
            name = n;
            expiration = e;
            category = c;
            quantity = q;
        }
};

template<typename T> class Inventory{
    public:
        std::vector<Item<T>> it;
    void addNewItem(const Item<T>& item){
      int f=0;
        if(it.size() == 0){
            it.push_back(item);
        }
        else
        {
  			for(const auto& curr : it){
             if (curr.name == item.name){
             f=1;
             std::cout<<"Item is already present in inventory"<<std::endl;
           
             }
            }
            if(f==0) {
             it.push_back(item);
                }
                
        }
    }
    void increaseQuantity(const T& itemname, int quantity) {
        for(int i=0;i<it.size();i++){
        if (it[i].name == itemname){
            it[i].quantity = it[i].quantity + quantity;
            }
        }
    }
    void updateItem(const T& itemname, const T& expiration, const T& category, int quantity) {
        int f = 0;
        for(int i=0;i<it.size();i++) {
            if(it[i].name == itemname) {
                it[i].expiration = expiration;
                it[i].category = category;
                it[i].quantity += quantity;
                f++;
            }
        }
        if(f==0) {
            throw "Item not found";
        }
    }
    void removeItem(const T& itemname) {
        int f = 0;
        for(int i=0;i<it.size();i++) {
            if(it[i].name == itemname) {
                it.erase(it.begin()+i);
                f++;
                break;
            }
        }
        if(f==0) {
            throw "Item not found";
        }
    }
    void Total() const {
        int x;
        x = it.size();
        std::cout << "Total size: " << x << std::endl;
    }
    void searchItem(const T& itemname) {
        int f = 0;
        for(int i=0;i<it.size();i++) {
            if(it[i].name == itemname) {
                f++;
            }
        }
        if(f==0) {
            throw "Item not found!!";
        } else {
            std::cout<<"Item found!";
        }
    }
    void displayItems(){
            std::cout<<"-------Inventory-------"<<std::endl;
            std::cout<<std::left<<std::setw(20)<<"Name"<<std::setw(15)<<"Expiration"<<std::setw(15)<<"Quantity"<<std::setw(10)<<"Category"<<std::endl;
            for(int i=0; i<it.size();i++){
                std::cout<<std::left << std::setw(20)<<it[i].name<<std::setw(15)<<it[i].expiration<<std::setw(15)<<it[i].quantity<<std::setw(15)<<it[i].category<<std::endl;
            }
    }
};

int main(){
    Inventory<std::string> i1;
    Item<std::string> I1("Protien Bar","05/09/2023","Snacks",4);
    i1.addNewItem(I1);
    Item<std::string> I2("Milk","05/12/2023","Regular",2);
    i1.addNewItem(I2);
    Item<std::string> I3("Cerels","09/12/2023","Snacks",5);
    i1.addNewItem(I3);
    i1.displayItems();
    i1.updateItem("Milk","09/24/2023","Regular",3);
    i1.displayItems();
    i1.increaseQuantity("Cerels",10);
    i1.displayItems();
    try{
        i1.updateItem("bar","09/12/2023","Snacks",3);
    }
    catch(const char* msg){
        std::cout <<msg << std::endl;
    }
    i1.displayItems();
    i1.updateItem("Cerels","09/27/2023","Regular",4);
    i1.displayItems();
    i1.Total();
    try{
        i1.removeItem("Bread");
    }
    catch(const char* msg){
        std::cout<<msg<<std::endl;
    }
    try{
        i1.removeItem("Milk");
    }
    catch(const char* msg){
        std::cout<<msg<<std::endl;
    }
    i1.displayItems();
    try{
        i1.searchItem("Cerels");
    }
    catch(const char* msg){
        std::cout<<msg<<std::endl;
    }
}
