#include <iostream>
#include <vector>

class PerfectSquareAnalyzer {
public:
    bool isPerfectSquare(int num) {
        int low = 1, high = num;
        while (low <= high) {
            long long mid = low + (high - low) / 2;
            if (mid * mid == num) {
                return true;
            } else if (mid * mid < num) {
                low = mid + 1;
            } else {
                high = mid - 1;
            }
        }
        return false;
    }

    std::vector<int> findPerfectSquaresBetween(int low, int high) {
        std::vector<int> result;
        for (int i = low; i <= high; i++) {
            if (isPerfectSquare(i)) {
                result.push_back(i);
            }
        }
        return result;
    }

    int getNextPerfectSquare(int num) {
        int nextNum = num + 1;
        while (!isPerfectSquare(nextNum)) {
            nextNum++;
        }
        return nextNum;
    }

    int getSquareRoot(int num) {
        if (!isPerfectSquare(num)) {
            return -1; 
        }
        int low = 1, high = num;
        while (low <= high) {
            long long mid = low + (high - low) / 2;
            if (mid * mid == num) {
                return mid;
            } else if (mid * mid < num) {
                low = mid + 1;
            } else {
                high = mid - 1;
            }
        }
        return -1; 
    }
};

void testPerfectSquareAnalyzer() {
    PerfectSquareAnalyzer analyzer;

    // Test Case 1: Check if a number is a perfect square
    std::cout << "Test Case 1: Check if a number is a perfect square\n";
    std::cout << "25 is a perfect square: " << std::boolalpha << analyzer.isPerfectSquare(25) << std::endl;
    std::cout << "26 is a perfect square: " << std::boolalpha << analyzer.isPerfectSquare(26) << std::endl;
    std::cout << "-----------------------\n";

    // Test Case 2: Find perfect squares between two numbers
    std::cout << "Test Case 2: Find perfect squares between two numbers\n";
    auto squares = analyzer.findPerfectSquaresBetween(10, 50);
    for (int square : squares) {
        std::cout << square << " ";
    }
    std::cout << "\n-----------------------\n";

    // Test Case 3: Get the next perfect square after a given number
    std::cout << "Test Case 3: Get the next perfect square after a given number\n";
    std::cout << "Next perfect square after 25: " << analyzer.getNextPerfectSquare(25) << std::endl;
    std::cout << "-----------------------\n";

    // Test Case 4: Get the square root of a perfect square
    std::cout << "Test Case 4: Get the square root of a perfect square\n";
    std::cout << "Square root of 36: " << analyzer.getSquareRoot(36) << std::endl;
    std::cout << "Square root of 37: " << analyzer.getSquareRoot(37) << std::endl;
    std::cout << "-----------------------\n";
}

int main() {
    testPerfectSquareAnalyzer(); 
    return 0;
}
